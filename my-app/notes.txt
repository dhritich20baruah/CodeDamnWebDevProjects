///Styles jsx
function Heading(props){
  return (
    <div>
      <h1>{props.heading}</h1>
      <style jsx global>
        {
          `
            h1{
              color: red
            }
          `
        }
      </style>
    </div>
  )
}

export default function Home() {
  return (
    <div>
     <Heading heading="Heading"/>
     <h1>Hello Again</h1>
    </div>
  )
}


///Global CSS
function Heading(props){
  return (
    <div>
      <h1 className="red">{props.heading}</h1>
    </div>
  )
}

export default function Home() {
  return (
    <div>
     <Heading heading="Heading"/>
     <h1>Hello Again</h1>
    </div>
  )
}

//css module
If you want to import the css to a particular file only import it as main.module.css
import styles from './main.module.css'
     <h1 className={styles.green}>Hello Again</h1>


///res, req objects
fetch('url', { method: 'POST',
headers: {
  'Content-Type': 'application/json'
},

body: JSON.stringify({
  username: 'admin',
  password: 'admin'
})
 })

import { NextApiRequest, NextApiResponse } from 'next'

export default function ( req: NextApiRequest, res:NextApiResponse ) {
    //it should not be a react component

    console.log('REQUESt BODY', req.body.username)

    // res.send('Hello send')
    // res.setHeader('X-custom-header', 'We r open now')
    res.setHeader('Set-Cookie', 'r u authenticated')
    // res.json({ num: Math.floor(Math.random() * 10) })
} 

//http://localhost:3000/api/random-number

#####GET SERVER SIDE PROPS#############


export function getServerSideProps(context){
  console.log('check', process.env.SPECIFICITY_CHECK)
  console.log(context)

  context.res.statusCode = 418
  context.res.write(JSON.stringify({ something: 'cool '}))
  context.res.end()

  return {
    redirect: {
      destination: 'https://dhritibaruah.in',
      permanent: false
    }
  }
  return{
    props: {"Hello": "word"}
  }
}

export default function Home() {
  console.log(
    'env value = ',
    process.env.SECRET_VARIABLE,
    process.env.NEXT_PUBLIC_MY_FIRST_BROWSERVARIABLE //if it is prefixed by NEXT_ it will available in the browser
  )
  const [username, setUsername] = useState<string>('')
  const [password, setPassword] = useState<string>('')

  const [message, setMessage] = useState<string>('U r not logged in')
  const [secret, setSecret] = useState<string>('')


  async function submitForm(){
    const res = await fetch('api/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({username, password})
    }).then((t) => t.json())

    const token = res.token

    if(token){
      const json = jwt.decode(token) as { [key: string]: string }
      setMessage(`Welcome ${json.username} and you are ${json.admin ? 'an admin!': 'not an admin!'}`)

      const res = await fetch('api/secret', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ token })
      }).then((t) => t.json())

      if(res.secretAdminCode){
        setSecret(res.secretAdminCode)
      }else{
        setMessage('Nothing available')
      }

    }else{
      setMessage('Something went wrong')
    }
  }
  return(
    <div>
      <h1>{message}</h1>
      <h1>Secret: {secret}</h1>
      <form>
        <input type="text" name="username" value={username} onChange={(e) => setUsername(e.target.value)}/>
        <br />
        <input type="password" name="password" value={password} onChange={(e) => setPassword(e.target.value)}/>
        <br />
        <input type="submit" value ="login" onClick={submitForm}/>
      </form>
      <p>
      <Link href="/myPage">
        <a>Link componenet</a>
      </Link>
      </p>
      <p>
      <Link href="/page1/nestedpage">
        <a>Nested Routes</a>
      </Link>
      </p>
      <p>
      <Link href="/page1/">
        <a>Index Nested Routes</a>
      </Link>
      </p>
    </div>
  )
}


